{"ast":null,"code":"var _jsxFileName = \"/Users/Jesse/project/my-app/src/containers/Discussion.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu } from 'semantic-ui-react';\nimport { Modal, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport 'semantic-ui-css/semantic.min.css';\nimport '../style/web.css';\nimport { Icon } from 'semantic-ui-react';\n\nclass Discussion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imgFile: null,\n      imgSrc: this.props.imgSrc || \"\",\n      renderState: this.props.renderState || \"init\",\n      isPreview: false,\n      disabled: this.props.disabled || false\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.imgSrc !== nextProps.imgSrc) {\n      this.setState({\n        imgSrc: nextProps.imgSrc\n      });\n    }\n\n    if (this.props.renderState !== nextProps.renderState) {\n      this.setState({\n        renderState: nextProps.renderState\n      });\n    }\n\n    if (this.props.disabled !== nextProps.disabled) {\n      this.setState({\n        disabled: nextProps.disabled\n      });\n    }\n  }\n\n  renderInit() {\n    //初始化渲染\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      accept: \"image/jpeg, image/gif, image/png, image/bmp\",\n      className: \"input-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"file\",\n      styleName: \"ant-upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.imgChange));\n  }\n\n  renderLoading() {\n    //正在上传\n    return React.createElement(\"div\", {\n      className: \"img-box\",\n      style: {\n        height: this.props.height\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    });\n  }\n\n  renderUpload() {\n    //上传完成\n    const imgBox = this.state.disabled ? \"img-box-preview-hide\" : \"img-box-preview-show\";\n    return React.createElement(\"div\", {\n      className: imgBox,\n      style: {\n        height: this.props.height\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"img-preview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"eye-o\",\n      className: \"img-operate\",\n      onClick: this.original.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Icon, {\n      type: \"delete\",\n      className: \"img-operate\",\n      onClick: this.deleteImg.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })));\n  }\n\n  renderImg() {\n    if (this.state.renderState === \"init\") {\n      return this.renderInit();\n    } else if (this.state.renderState === \"loading\") {\n      return this.renderLoading();\n    } else if (this.state.renderState === \"upload\") {\n      return this.renderUpload();\n    }\n  }\n\n  imgChange(event) {\n    //获取文件图片\n    this.setState({\n      imgFile: event.target.files[0],\n      renderState: \"loading\"\n    }, () => {\n      this.previewImg();\n    });\n  }\n\n  previewImg() {\n    //本地预览\n    const that = this;\n    const file = this.state.imgFile;\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function (e) {\n      that.setState({\n        renderState: \"upload\",\n        imgSrc: this.result\n      });\n    };\n  }\n\n  original() {\n    //原图查看\n    this.setState({\n      isPreview: true\n    });\n  }\n\n  deleteImg() {\n    //删除图片\n    this.setState({\n      renderState: \"init\",\n      imgFile: null,\n      isPreview: false,\n      imgSrc: \"\"\n    });\n  }\n\n  resetImgSrc() {\n    this.setState({\n      renderState: this.props.renderState,\n      imgFile: null,\n      imgSrc: this.props.imgSrc\n    });\n  }\n\n  getImgFile() {\n    return {\n      file: this.state.imgFile,\n      src: this.state.imgSrc\n    };\n  }\n\n  cancelModal() {\n    //关闭弹窗\n    this.setState({\n      isPreview: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Home/\",\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Home\"))), React.createElement(Menu.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Honorroll/\",\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Honor roll\")))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.renderImg(), React.createElement(Modal, {\n      visible: this.state.isPreview,\n      footer: null,\n      onCancel: this.cancelModal.bind(this),\n      width: \"auto\",\n      wrapClassName: \"img-center\",\n      style: {\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.imgSrc,\n      className: \"preview-all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }))));\n  }\n\n  onFileChange(e) {\n    const file = e.target.files[0];\n\n    if (this.handleBeforeUpload(file)) {\n      this.setState({\n        imgFile: file,\n        showCropModal: true\n      }, () => {\n        this.handlePreview();\n      });\n    }\n  } // 检查照片格式、大小等信息\n\n\n  handleBeforeUpload(file) {\n    const IMAGE_MAX_SIZE = 1024 * 1024; // 上传图片最大大小\n\n    if (file) {\n      const sizeOk = file.size < IMAGE_MAX_SIZE;\n      const typeReg = new RegExp(/^image\\/bmp|gif|jpg|jpeg|png$/, 'i');\n      const typeOk = typeReg.test(file.type);\n\n      if (!typeOk) {\n        console.log('照片格式有误');\n      } else if (!sizeOk) {\n        console.log('照片大小超过1M');\n      }\n\n      return sizeOk && typeOk;\n    }\n  }\n\n  handlePreview() {\n    const that = this;\n    const file = this.state.imgFile;\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function (e) {\n      that.setState({\n        showPreviewModal: true,\n        imgSrc: this.result\n      });\n    };\n  } // 删除图片\n\n\n  swapImageFile() {\n    this.setState({\n      imgSrc: ''\n    });\n  }\n\n  uploadButton() {}\n\n}\n\nDiscussion.defaultProps = {\n  imgTitle: \"\",\n  height: \"200px\",\n  renderState: \"init\",\n  imgSrc: \"\",\n  titleClass: \"\",\n  accept: \"*\"\n};\nDiscussion.propTypes = {\n  imgTitle: PropTypes.string,\n  renderState: PropTypes.oneOf(['init', 'loading', 'upload']),\n  imgSrc: PropTypes.string,\n  titleClass: PropTypes.string,\n  accept: PropTypes.string\n};\nexport default Discussion;","map":{"version":3,"sources":["/Users/Jesse/project/my-app/src/containers/Discussion.js"],"names":["React","Component","Link","Menu","Modal","Button","PropTypes","Icon","Discussion","constructor","props","state","imgFile","imgSrc","renderState","isPreview","disabled","componentWillReceiveProps","nextProps","setState","renderInit","imgChange","renderLoading","height","renderUpload","imgBox","original","bind","deleteImg","renderImg","event","target","files","previewImg","that","file","reader","FileReader","readAsDataURL","onload","e","result","resetImgSrc","getImgFile","src","cancelModal","render","color","display","onFileChange","handleBeforeUpload","showCropModal","handlePreview","IMAGE_MAX_SIZE","sizeOk","size","typeReg","RegExp","typeOk","test","type","console","log","showPreviewModal","swapImageFile","uploadButton","defaultProps","imgTitle","titleClass","accept","propTypes","string","oneOf"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport {Menu} from 'semantic-ui-react';\nimport { Modal, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types'\nimport 'semantic-ui-css/semantic.min.css';\nimport '../style/web.css';\nimport { Icon } from 'semantic-ui-react';\n\nclass Discussion extends Component{\n    constructor(props) {\n            super(props)\n            this.state = {\n              imgFile: null,\n              imgSrc: this.props.imgSrc||\"\",\n              renderState: this.props.renderState||\"init\",\n              isPreview: false,\n              disabled:this.props.disabled || false\n            }\n          }\n        \n          static defaultProps = {\n            imgTitle: \"\",\n            height: \"200px\",\n            renderState: \"init\",\n            imgSrc: \"\",\n            titleClass: \"\",\n            accept:\"*\"\n          }\n        \n          static propTypes = {\n            imgTitle: PropTypes.string,\n            renderState: PropTypes.oneOf(['init', 'loading', 'upload']),\n            imgSrc: PropTypes.string,\n            titleClass: PropTypes.string,\n            accept:PropTypes.string\n          };\n        \n          componentWillReceiveProps(nextProps){\n            if(this.props.imgSrc !== nextProps.imgSrc){\n              this.setState({imgSrc:nextProps.imgSrc})\n            }\n            if(this.props.renderState !== nextProps.renderState){\n              this.setState({renderState:nextProps.renderState})\n            }\n            if(this.props.disabled !== nextProps.disabled){\n              this.setState({disabled:nextProps.disabled})\n            }  \n        \n          }\n       \n          renderInit() {//初始化渲染\n            return (\n                <div>\n                <input\n                  type=\"file\"\n                  accept=\"image/jpeg, image/gif, image/png, image/bmp\"\n                  className=\"input-file\"\n                />\n                <label htmlFor=\"file\" styleName=\"ant-upload\">  \n                    {this.imgChange}\n                </label>\n            </div>\n            )\n          }\n        \n          renderLoading() {//正在上传\n            return (\n              <div className=\"img-box\" style={{ height: this.props.height }}>\n              </div>\n            )\n          }\n        \n          renderUpload() {//上传完成\n            const imgBox = this.state.disabled ? \"img-box-preview-hide\" : \"img-box-preview-show\"\n            return (\n              <div className={imgBox} style={{ height: this.props.height }}>\n                <div className=\"img-preview\">\n                  <Icon type=\"eye-o\" className=\"img-operate\" onClick={this.original.bind(this)} />\n                  <Icon type=\"delete\" className=\"img-operate\" onClick={this.deleteImg.bind(this)} />\n                </div>\n              </div>\n            )\n          }\n       \n          renderImg() {\n            if (this.state.renderState === \"init\") {\n              return this.renderInit()\n            } else if (this.state.renderState === \"loading\") {\n              return this.renderLoading()\n            } else if (this.state.renderState === \"upload\") {\n              return this.renderUpload()\n            }\n          }\n        \n          imgChange(event) {//获取文件图片\n            this.setState({ imgFile: event.target.files[0], renderState: \"loading\" }, () => {\n              this.previewImg()\n            })\n          }\n        \n          previewImg() {//本地预览\n            const that = this;\n            const file = this.state.imgFile;\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = function (e) {\n              that.setState({ renderState: \"upload\", imgSrc: this.result })\n            }\n          }\n        \n          original() {//原图查看\n            this.setState({ isPreview: true })\n          }\n        \n          deleteImg() {//删除图片\n            this.setState({ renderState: \"init\", imgFile: null, isPreview: false, imgSrc: \"\" })\n          }\n        \n          resetImgSrc(){\n            this.setState({ renderState: this.props.renderState, imgFile: null, imgSrc: this.props.imgSrc })\n          }\n          getImgFile() {\n            return {file:this.state.imgFile,src:this.state.imgSrc}\n        }\n      \n        cancelModal() {//关闭弹窗\n          this.setState({ isPreview: false })\n        }\n     \n\n    \n    \n    render(){\n      \n        return (\n            <div>  \n            <Menu>\n            <Menu.Item>\n                <Link to=\"/Home/\" style={{color:'black'}}>\n                    <div>Home</div>\n                </Link>\n            </Menu.Item>\n            <Menu.Item>\n                <Link to=\"/Honorroll/\" style={{color:'black'}}>\n                    <div>Honor roll</div>\n                </Link>\n            </Menu.Item>\n            {/* <Menu.Item>\n                {this.changeContent()}\n            </Menu.Item> */}\n            </Menu>\n\n            \n    \n            <div>\n        {this.renderImg()}\n        <Modal visible={this.state.isPreview} footer={null}\n          onCancel={this.cancelModal.bind(this)}\n          width=\"auto\" wrapClassName=\"img-center\"\n          style={{ display: \"inline-block\" }}\n        >\n          <img src={this.state.imgSrc} className=\"preview-all\" />\n        </Modal>\n      </div>\n\n\n\n                   \n        </div>\n    \n    \n        )\n      }\n    \n      onFileChange(e) {\n        const file = e.target.files[0];\n        if (this.handleBeforeUpload(file)) {\n        this.setState({ imgFile: file, showCropModal: true}, () => {\n            this.handlePreview();\n          });\n        }\n      }\n    \n    // 检查照片格式、大小等信息\n      handleBeforeUpload(file) {\n        const IMAGE_MAX_SIZE = 1024 * 1024; // 上传图片最大大小\n        if (file) {\n          const sizeOk = file.size < IMAGE_MAX_SIZE;\n          const typeReg = new RegExp(/^image\\/bmp|gif|jpg|jpeg|png$/, 'i');\n          const typeOk = typeReg.test(file.type);\n    \n          if (!typeOk) {\n           console.log('照片格式有误');\n          } else if (!sizeOk) {\n            console.log('照片大小超过1M');\n          }\n    \n          return sizeOk && typeOk;\n        }\n      }\n\n      handlePreview() {\n        const that = this;\n        const file = this.state.imgFile;\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = function (e) {\n          that.setState({showPreviewModal: true, imgSrc: this.result })\n        }\n      }\n      \n      // 删除图片\n      swapImageFile() {\n        this.setState({ imgSrc: '' });\n      }\n      uploadButton(){\n        \n      }\n      \n}\n\n\n\n  export default Discussion;"]},"metadata":{},"sourceType":"module"}