{"ast":null,"code":"import _slicedToArray from \"/Users/Jesse/project/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jesse/project/my-app/src/containers/Discussion.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu, Image } from 'semantic-ui-react';\nimport { Modal, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport 'semantic-ui-css/semantic.min.css';\nimport '../style/web.css';\nimport { Icon } from 'semantic-ui-react';\n\nclass Discussion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imgFile: null,\n      imgSrc: \"\",\n      showPreviewModal: false,\n      showCropModal: false\n    };\n  }\n\n  render() {\n    const imagePreview = React.createElement(\"button\", {\n      type: \"delete\",\n      className: \"icon-btn\",\n      onClick: this.swapImageFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n    const uploadImage = React.createElement(\"div\", {\n      className: \"upload-plus-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"upload\"));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Home/\",\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Home\"))), React.createElement(Menu.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Honorroll/\",\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Honor roll\")))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.example));\n  }\n\n  example() {\n    const _React$useState = React.useState(false),\n          _React$useState2 = _slicedToArray(_React$useState, 2),\n          show = _React$useState2[0],\n          setShow = _React$useState2[1];\n\n    const handleClose = () => setShow(false);\n\n    const handleShow = () => setShow(true);\n\n    return React.createElement(React.Fragment, null, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Launch demo modal\"), React.createElement(Modal, {\n      show: show,\n      onHide: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Modal heading\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Woohoo, you're reading this text in a modal!\"), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Save Changes\"))));\n  }\n\n  showImage() {\n    const _React$useState3 = React.useState(false),\n          _React$useState4 = _slicedToArray(_React$useState3, 2),\n          modalShow = _React$useState4[0],\n          setModalShow = _React$useState4[1];\n\n    if (this.state.imgSrc) {\n      return React.createElement(this.MyModal, {\n        show: modalShow,\n        onHide: () => setModalShow(true),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(this.MyModal, {\n        show: modalShow,\n        onHide: () => setModalShow(false),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      });\n    }\n  }\n\n  MyModal(props) {\n    return React.createElement(Modal, {\n      footer: null,\n      onCancel: this.cancelModal.bind(this),\n      width: \"auto\",\n      wrapClassName: \"img-center\",\n      style: {\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.imgSrc,\n      className: \"preview-all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }));\n  }\n\n  onFileChange(e) {\n    const file = e.target.files[0];\n\n    if (this.handleBeforeUpload(file)) {\n      this.setState({\n        imgFile: file,\n        showCropModal: true\n      }, () => {\n        this.handlePreview();\n      });\n    }\n  } // 检查照片格式、大小等信息\n\n\n  handleBeforeUpload(file) {\n    const IMAGE_MAX_SIZE = 1024 * 1024; // 上传图片最大大小\n\n    if (file) {\n      const sizeOk = file.size < IMAGE_MAX_SIZE;\n      const typeReg = new RegExp(/^image\\/bmp|gif|jpg|jpeg|png$/, 'i');\n      const typeOk = typeReg.test(file.type);\n\n      if (!typeOk) {\n        console.log('照片格式有误');\n      } else if (!sizeOk) {\n        console.log('照片大小超过1M');\n      }\n\n      return sizeOk && typeOk;\n    }\n  }\n\n  handlePreview() {\n    const that = this;\n    const file = this.state.imgFile;\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function (e) {\n      that.setState({\n        imgSrc: this.result\n      });\n    };\n  } // 删除图片\n\n\n  swapImageFile() {\n    this.setState({\n      imgSrc: ''\n    });\n  }\n\n}\n\nexport default Discussion;","map":{"version":3,"sources":["/Users/Jesse/project/my-app/src/containers/Discussion.js"],"names":["React","Component","Link","Menu","Image","Modal","Button","PropTypes","Icon","Discussion","constructor","props","state","imgFile","imgSrc","showPreviewModal","showCropModal","render","imagePreview","swapImageFile","uploadImage","color","example","useState","show","setShow","handleClose","handleShow","showImage","modalShow","setModalShow","MyModal","cancelModal","bind","display","onFileChange","e","file","target","files","handleBeforeUpload","setState","handlePreview","IMAGE_MAX_SIZE","sizeOk","size","typeReg","RegExp","typeOk","test","type","console","log","that","reader","FileReader","readAsDataURL","onload","result"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport {Menu,Image} from 'semantic-ui-react';\nimport { Modal, Button} from 'react-bootstrap';\nimport PropTypes from 'prop-types'\nimport 'semantic-ui-css/semantic.min.css';\nimport '../style/web.css';\nimport { Icon } from 'semantic-ui-react';\n\n\nclass Discussion extends Component{\n    constructor(props) {\n            super(props)\n            this.state = {\n              imgFile: null,\n              imgSrc: \"\",\n              showPreviewModal: false,\n              showCropModal:false\n            }\n          }\n        \n    \n    render(){\n        const imagePreview = (\n           \n                    <button\n                      type=\"delete\"\n                      className=\"icon-btn\"\n                      onClick={this.swapImageFile}\n                    />\n                 \n        );\n      \n        const uploadImage = (\n            \n             <div className=\"upload-plus-text\">\n             <Icon type=\"plus\" />\n             <div className=\"ant-upload-text\">upload</div>\n           </div>\n            );\n        \n\n        return (\n            <div>  \n            <Menu>\n            <Menu.Item>\n                <Link to=\"/Home/\" style={{color:'black'}}>\n                    <div>Home</div>\n                </Link>\n            </Menu.Item>\n            <Menu.Item>\n                <Link to=\"/Honorroll/\" style={{color:'black'}}>\n                    <div>Honor roll</div>\n                </Link>\n            </Menu.Item>\n            {/* <Menu.Item>\n                {this.changeContent()}\n            </Menu.Item> */}\n            </Menu>\n            \n\n            \n            <div>\n                \n                {this.example}\n          \n  </div>\n\n\n     \n                   \n        </div>\n    \n    \n        )\n      }\n      example(){\n    \n            const [show, setShow] = React.useState(false);\n          \n            const handleClose = () => setShow(false);\n            const handleShow = () => setShow(true);\n          \n            return (\n              <>\n                <Button variant=\"primary\" onClick={handleShow}>\n                  Launch demo modal\n                </Button>\n          \n                <Modal show={show} onHide={handleClose}>\n                  <Modal.Header closeButton>\n                    <Modal.Title>Modal heading</Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n                  <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                      Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                      Save Changes\n                    </Button>\n                  </Modal.Footer>\n                </Modal>\n              </>\n            );\n          \n      }\n\n      showImage(){\n        const [modalShow, setModalShow] = React.useState(false);\n\n        if (this.state.imgSrc){\n        return (\n            <this.MyModal\n        show={modalShow}\n        onHide={() => setModalShow(true)}\n      />\n        )\n        }\n        else{\n            return (\n                <this.MyModal\n            show={modalShow}\n            onHide={() => setModalShow(false)}\n          />\n            )\n\n        }\n      }\n\n    MyModal(props) {\n        return (\n            <Modal footer={null}\n            onCancel={this.cancelModal.bind(this)}\n            width=\"auto\" wrapClassName=\"img-center\"\n            style={{ display: \"inline-block\" }}\n          >\n            <img src={this.state.imgSrc} className=\"preview-all\" />\n          </Modal>\n        )\n    }\n    \n      onFileChange(e) {\n        const file = e.target.files[0];\n        if (this.handleBeforeUpload(file)) {\n        this.setState({ imgFile: file, showCropModal: true}, () => {\n            this.handlePreview();\n          });\n        }\n      }\n    \n    // 检查照片格式、大小等信息\n      handleBeforeUpload(file) {\n        const IMAGE_MAX_SIZE = 1024 * 1024; // 上传图片最大大小\n        if (file) {\n          const sizeOk = file.size < IMAGE_MAX_SIZE;\n          const typeReg = new RegExp(/^image\\/bmp|gif|jpg|jpeg|png$/, 'i');\n          const typeOk = typeReg.test(file.type);\n    \n          if (!typeOk) {\n           console.log('照片格式有误');\n          } else if (!sizeOk) {\n            console.log('照片大小超过1M');\n          }\n    \n          return sizeOk && typeOk;\n        }\n      }\n\n      handlePreview() {\n        const that = this;\n        const file = this.state.imgFile;\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = function (e) {\n          that.setState({imgSrc: this.result })\n        }\n      }\n\n      // 删除图片\n      swapImageFile() {\n        this.setState({ imgSrc: '' });\n      }\n      \n}\n\n\n\n  export default Discussion;"]},"metadata":{},"sourceType":"module"}