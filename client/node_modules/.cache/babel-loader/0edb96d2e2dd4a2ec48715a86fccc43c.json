{"ast":null,"code":"var _jsxFileName = \"/Users/Jesse/project/my-app/client/src/containers/Discussion.js\";\nimport React, { Component } from 'react';\nimport { Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Popup from \"reactjs-popup\";\nimport 'semantic-ui-css/semantic.min.css';\nimport '../style/web.css';\nimport { Icon } from 'semantic-ui-react';\n\nclass Discussion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imgFile: null,\n      imgSrc: \"\",\n      list: []\n    };\n  }\n\n  componentWillMount() {\n    this.getAllimage();\n  }\n\n  onFileChange(e) {\n    const file = e.target.files[0];\n\n    if (this.handleBeforeUpload(file)) {\n      this.setState({\n        imgFile: file\n      }, () => {\n        this.handlePreview();\n      });\n    }\n  }\n\n  handleBeforeUpload(file) {\n    const IMAGE_MAX_SIZE = 1024 * 1024;\n\n    if (file) {\n      const sizeOk = file.size < IMAGE_MAX_SIZE;\n      const typeReg = new RegExp(/^image\\/jpg|jpeg|png$/, 'i');\n      const typeOk = typeReg.test(file.type);\n\n      if (!typeOk) {\n        window.alert('Only accept jpg or png');\n      } else if (!sizeOk) {\n        window.alert('Maxsize is 1024 x 1024');\n      }\n\n      return sizeOk && typeOk;\n    }\n  }\n\n  handlePreview() {\n    const that = this;\n    const file = this.state.imgFile;\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function (e) {\n      that.setState({\n        imgSrc: this.result\n      });\n    };\n  }\n\n  deleteImageFile() {\n    this.setState({\n      imgSrc: ''\n    });\n  }\n\n  upload() {\n    const formData = new FormData();\n    formData.append('myImage', this.state.imgFile);\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    axios.post('/upload', formData, config).then(function (response) {\n      window.alert(response.data);\n      if (response.data === \"Success\") window.location.reload();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  getAllimage() {\n    var that = this;\n    axios.post('/getAllImg', {\n      content: \" \"\n    }).then(function (response) {\n      that.setState({\n        list: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const showImage = React.createElement(React.Fragment, null, React.createElement(\"img\", {\n      style: {\n        width: '600px',\n        height: '450px'\n      },\n      src: this.state.imgSrc,\n      className: \"preview-all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.deleteImageFile.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.upload.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Upload\"));\n    const uploadImage = React.createElement(\"div\", {\n      className: \"upload-plus-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"upload\"));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.state.list.map((item, idx) => React.createElement(\"div\", {\n      class: \"show\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"photo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Image, {\n      rounded: true,\n      src: item.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Comment/\",\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"introa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Reply\")), React.createElement(\"p\", {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"introa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"delete\"))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.example, React.createElement(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      accept: \"image/png, image/jpg\",\n      className: \"input-file\",\n      onChange: e => {\n        this.onFileChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"file\",\n      className: \"ant-upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.state.imgSrc ? showImage : uploadImage)));\n  }\n\n}\n\nexport default Discussion;","map":{"version":3,"sources":["/Users/Jesse/project/my-app/client/src/containers/Discussion.js"],"names":["React","Component","Image","Link","Button","PropTypes","axios","Popup","Icon","Discussion","constructor","props","state","imgFile","imgSrc","list","componentWillMount","getAllimage","onFileChange","e","file","target","files","handleBeforeUpload","setState","handlePreview","IMAGE_MAX_SIZE","sizeOk","size","typeReg","RegExp","typeOk","test","type","window","alert","that","reader","FileReader","readAsDataURL","onload","result","deleteImageFile","upload","formData","FormData","append","config","headers","post","then","response","data","location","reload","catch","error","console","log","content","render","showImage","width","height","bind","uploadImage","map","item","idx","url","color","example"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,KAAR,QAAoB,mBAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAO,kCAAP;AACA,OAAO,kBAAP;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,MAAMC,UAAN,SAAyBR,SAAzB,CAAkC;AAC9BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACX,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,IAAI,EAAE;AAHK,KAAb;AAKD;;AAEPC,EAAAA,kBAAkB,GAAE;AAClB,SAAKC,WAAL;AACD;;AAEDC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;;AACA,QAAI,KAAKC,kBAAL,CAAwBH,IAAxB,CAAJ,EAAmC;AACnC,WAAKI,QAAL,CAAc;AAAEX,QAAAA,OAAO,EAAEO;AAAX,OAAd,EAAgC,MAAM;AAClC,aAAKK,aAAL;AACD,OAFH;AAGC;AACF;;AAEDF,EAAAA,kBAAkB,CAACH,IAAD,EAAO;AACvB,UAAMM,cAAc,GAAG,OAAO,IAA9B;;AACA,QAAIN,IAAJ,EAAU;AACR,YAAMO,MAAM,GAAGP,IAAI,CAACQ,IAAL,GAAYF,cAA3B;AACA,YAAMG,OAAO,GAAG,IAAIC,MAAJ,CAAW,uBAAX,EAAoC,GAApC,CAAhB;AACA,YAAMC,MAAM,GAAGF,OAAO,CAACG,IAAR,CAAaZ,IAAI,CAACa,IAAlB,CAAf;;AAEA,UAAI,CAACF,MAAL,EAAa;AACZG,QAAAA,MAAM,CAACC,KAAP,CAAa,wBAAb;AACA,OAFD,MAEO,IAAI,CAACR,MAAL,EAAa;AAClBO,QAAAA,MAAM,CAACC,KAAP,CAAa,wBAAb;AACD;;AAED,aAAOR,MAAM,IAAII,MAAjB;AACD;AACF;;AAEDN,EAAAA,aAAa,GAAG;AACd,UAAMW,IAAI,GAAG,IAAb;AACA,UAAMhB,IAAI,GAAG,KAAKR,KAAL,CAAWC,OAAxB;AACA,UAAMwB,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBnB,IAArB;;AACAiB,IAAAA,MAAM,CAACG,MAAP,GAAgB,UAAUrB,CAAV,EAAa;AAC3BiB,MAAAA,IAAI,CAACZ,QAAL,CAAc;AAACV,QAAAA,MAAM,EAAE,KAAK2B;AAAd,OAAd;AACD,KAFD;AAGD;;AAGDC,EAAAA,eAAe,GAAG;AAChB,SAAKlB,QAAL,CAAc;AAAEV,MAAAA,MAAM,EAAE;AAAV,KAAd;AACD;;AAED6B,EAAAA,MAAM,GAAE;AACP,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACCD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA0B,KAAKlC,KAAL,CAAWC,OAArC;AACA,UAAMkC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAKA1C,IAAAA,KAAK,CAAC2C,IAAN,CAAW,SAAX,EAAqBL,QAArB,EAA8BG,MAA9B,EACGG,IADH,CACQ,UAAUC,QAAV,EAAqB;AACzBjB,MAAAA,MAAM,CAACC,KAAP,CAAagB,QAAQ,CAACC,IAAtB;AACA,UAAGD,QAAQ,CAACC,IAAT,KAAgB,SAAnB,EACAlB,MAAM,CAACmB,QAAP,CAAgBC,MAAhB;AACD,KALH,EAMGC,KANH,CAMS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KARH;AASD;;AAEDvC,EAAAA,WAAW,GAAE;AACX,QAAImB,IAAI,GAAG,IAAX;AACA9B,IAAAA,KAAK,CAAC2C,IAAN,CAAW,YAAX,EAAwB;AACtBU,MAAAA,OAAO,EAAE;AADa,KAAxB,EAGGT,IAHH,CAGQ,UAAUC,QAAV,EAAqB;AACzBf,MAAAA,IAAI,CAACZ,QAAL,CAAc;AAACT,QAAAA,IAAI,EAAEoC,QAAQ,CAACC;AAAhB,OAAd;AACD,KALH,EAMGG,KANH,CAMS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KARH;AASD;;AAEDI,EAAAA,MAAM,GAAE;AACJ,UAAMC,SAAS,GACX,0CACJ;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,OAAR;AAAgBC,QAAAA,MAAM,EAAE;AAAxB,OAAZ;AAA8C,MAAA,GAAG,EAAE,KAAKnD,KAAL,CAAWE,MAA9D;AAAsE,MAAA,SAAS,EAAC,aAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,EAEH,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAE,KAAK4B,eAAL,CAAqBsB,IAArB,CAA0B,IAA1B,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFG,EAKF,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,KAAKrB,MAAL,CAAYqB,IAAZ,CAAiB,IAAjB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALE,CADJ;AAYA,UAAMC,WAAW,GAEZ;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,CAFL;AASA,WACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACY,KAAKrD,KAAL,CAAWG,IAAX,CAAgBmD,GAAhB,CAAoB,CAACC,IAAD,EAAOC,GAAP,KAC9B;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAS,MAAA,OAAO,MAAhB;AAAiB,MAAA,GAAG,EAAED,IAAI,CAACE,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADA,EAIA;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,WAAT;AAAqB,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,CADA,EAIA;AAAG,MAAA,KAAK,EAAE;AAACA,QAAAA,KAAK,EAAC;AAAP,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,CAJA,CAJA,CADU,CADZ,EAiBO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,OADV,EAEF;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,MAFL;AAGE,MAAA,MAAM,EAAC,sBAHT;AAIE,MAAA,SAAS,EAAC,YAJZ;AAKE,MAAA,QAAQ,EAAEpD,CAAC,IAAI;AACb,aAAKD,YAAL,CAAkBC,CAAlB;AACC,OAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFE,EAYH;AAAO,MAAA,OAAO,EAAC,MAAf;AAAsB,MAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKP,KAAL,CAAWE,MAAX,GAAoB+C,SAApB,GAAgCI,WADlC,CAZG,CAjBP,CADG;AAqCD;;AAlJ2B;;AAuJhC,eAAexD,UAAf","sourcesContent":["import React,{Component} from 'react';\nimport {Image} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport {Button} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Popup from \"reactjs-popup\";\nimport 'semantic-ui-css/semantic.min.css';\nimport '../style/web.css';\nimport { Icon } from 'semantic-ui-react';\n\nclass Discussion extends Component{\n    constructor(props) {\n            super(props)\n            this.state = {\n              imgFile: null,\n              imgSrc: \"\",\n              list: []\n            }\n          }\n        \n    componentWillMount(){\n      this.getAllimage();\n    }\n\n    onFileChange(e) {\n      const file = e.target.files[0];\n      if (this.handleBeforeUpload(file)) {\n      this.setState({ imgFile: file}, () => {\n          this.handlePreview();\n        });\n      }\n    }\n  \n    handleBeforeUpload(file) {\n      const IMAGE_MAX_SIZE = 1024 * 1024;\n      if (file) {\n        const sizeOk = file.size < IMAGE_MAX_SIZE;\n        const typeReg = new RegExp(/^image\\/jpg|jpeg|png$/, 'i');\n        const typeOk = typeReg.test(file.type);\n  \n        if (!typeOk) {\n         window.alert('Only accept jpg or png');\n        } else if (!sizeOk) {\n          window.alert('Maxsize is 1024 x 1024');\n        }\n  \n        return sizeOk && typeOk;\n      }\n    }\n\n    handlePreview() {\n      const that = this;\n      const file = this.state.imgFile;\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = function (e) {\n        that.setState({imgSrc: this.result })\n      }\n    }\n\n\n    deleteImageFile() {\n      this.setState({ imgSrc: '' });\n    }\n\n    upload(){\n     const formData = new FormData();\n      formData.append('myImage',this.state.imgFile);\n      const config = {\n          headers: {\n              'content-type': 'multipart/form-data'\n          }\n      };\n      axios.post('/upload',formData,config)\n        .then(function (response)  {\n          window.alert(response.data);\n          if(response.data===\"Success\")\n          window.location.reload();\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n\n    getAllimage(){\n      var that = this;\n      axios.post('/getAllImg',{\n        content: \" \"\n      })\n        .then(function (response)  {\n          that.setState({list: response.data});\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n    \n    render(){\n        const showImage = (\n            <>\n        <img style={{width: '600px',height: '450px'}} src={this.state.imgSrc} className=\"preview-all\" />\n         <Button variant=\"secondary\" onClick={this.deleteImageFile.bind(this)} >\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={this.upload.bind(this)}>\n           Upload\n          </Button>\n          </>\n        );\n      \n        const uploadImage = (\n            \n             <div className=\"upload-plus-text\">\n             <Icon type=\"plus\" />\n             <div className=\"ant-upload-text\">upload</div>\n           </div>\n            );\n            \n\n        return (\n     <div> \n                {this.state.list.map((item, idx) => (\n       <div class=\"show\">\n       <div class=\"photo\">\n       <Image   rounded src={item.url}/>\n       </div>\n       <div class=\"intro\">\n       <Link to=\"/Comment/\" style={{color:'black'}}>\n       <div class=\"introa\">Reply</div>\n       </Link>\n       <p style={{color:'black'}}>\n       <div class=\"introa\">delete</div>\n       </p>\n       </div>\n       </div>\n\t    ))\n          }\n            <div>\n                {this.example}\n          <input\n            type=\"file\"\n            id='file'\n            accept=\"image/png, image/jpg\"\n            className=\"input-file\"\n            onChange={e => {\n              this.onFileChange(e);\n              }}\n            />\n    \n         <label htmlFor=\"file\" className=\"ant-upload\">  \n          {this.state.imgSrc ? showImage : uploadImage}\n         </label>\n            </div>\n        </div>\n    \n        )\n      }\n}\n\n\n\n  export default Discussion;"]},"metadata":{},"sourceType":"module"}