{"ast":null,"code":"var _jsxFileName = \"/Users/Jesse/project/my-app/client/src/containers/Comment.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Menu, Image } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport '../style/web.css';\nimport { Icon } from 'semantic-ui-react';\n\nclass Comment extends Component {\n  constructor(props) {\n    super(props); //this.isLogi = this.isLogin.bind(this);\n    // this.isLogin2 = this.isLogin2.bind(this);\n    //this.logout = this.logout.bind(this);\n    //this.changeContent = this.changeContent.bind(this);\n\n    this.state = {\n      imgFile: null,\n      imgSrc: \"\",\n      list: []\n    };\n    this.openForm = this.openForm.bind(this);\n    this.closeForm = this.closeForm.bind(this);\n    this.upload = this.upload.bind(this);\n  }\n\n  upload() {\n    const formData = new FormData();\n    formData.append('myImage', this.state.imgFile);\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    axios.post('/reply', formData, config).then(function (response) {\n      window.alert(response.data);\n      if (response.data === \"Success\") window.location.reload();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  onFileChange(e) {\n    const file = e.target.files[0];\n\n    if (this.handleBeforeUpload(file)) {\n      this.setState({\n        imgFile: file\n      }, () => {\n        this.handlePreview();\n      });\n    }\n  }\n\n  handleBeforeUpload(file) {\n    const IMAGE_MAX_SIZE = 1024 * 1024;\n\n    if (file) {\n      const sizeOk = file.size < IMAGE_MAX_SIZE;\n      const typeReg = new RegExp(/^image\\/jpg|jpeg|png$/, 'i');\n      const typeOk = typeReg.test(file.type);\n\n      if (!typeOk) {\n        window.alert('Only accept jpg or png');\n      } else if (!sizeOk) {\n        window.alert('Maxsize is 1024 x 1024');\n      }\n\n      return sizeOk && typeOk;\n    }\n  }\n\n  handlePreview() {\n    const that = this;\n    const file = this.state.imgFile;\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function (e) {\n      that.setState({\n        imgSrc: this.result\n      });\n    };\n  }\n\n  deleteImageFile() {\n    this.setState({\n      imgSrc: ''\n    });\n  }\n\n  render() {\n    const showImage = React.createElement(React.Fragment, null, React.createElement(\"img\", {\n      style: {\n        width: '300px',\n        height: '300px'\n      },\n      src: this.state.imgSrc,\n      className: \"preview-all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.upload.bind(this),\n      class: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Send\"));\n    const uploadImage = React.createElement(\"div\", {\n      className: \"upload-plus-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"upload\"));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Image, {\n      rounded: true,\n      src: require('../img/ww.jpeg'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Image, {\n      alt: \"Avatar\",\n      rounded: true,\n      src: require('../img/qq.jpeg'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Hello.How are you today?\"), React.createElement(\"span\", {\n      class: \"time-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"11:00\")), React.createElement(\"div\", {\n      class: \"container darker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Image, {\n      rounded: true,\n      src: require('../img/ww.jpeg'),\n      alt: \"Avater\",\n      class: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Hey! I'm fine. Thanks for asking!\"), React.createElement(\"span\", {\n      class: \"time-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"11:02\")), React.createElement(\"button\", {\n      class: \"open-button\",\n      onClick: this.openForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Reply\"), React.createElement(\"div\", {\n      class: \"chat-popup\",\n      id: \"myForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \"/action_page.php\",\n      class: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Reply\"), React.createElement(\"label\", {\n      for: \"msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Picture\")), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      accept: \"image/png, image/jpg\",\n      className: \"input-file\",\n      onChange: e => {\n        this.onFileChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"file\",\n      className: \"ant-upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.state.imgSrc ? showImage : uploadImage), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn cancel\",\n      onClick: this.closeForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n  openForm() {\n    document.getElementById(\"myForm\").style.display = \"block\";\n  }\n\n  closeForm() {\n    document.getElementById(\"myForm\").style.display = \"none\";\n  }\n\n}\n\nexport default Comment;","map":{"version":3,"sources":["/Users/Jesse/project/my-app/client/src/containers/Comment.js"],"names":["React","Component","Link","axios","Menu","Image","Icon","Comment","constructor","props","state","imgFile","imgSrc","list","openForm","bind","closeForm","upload","formData","FormData","append","config","headers","post","then","response","window","alert","data","location","reload","catch","error","console","log","onFileChange","e","file","target","files","handleBeforeUpload","setState","handlePreview","IMAGE_MAX_SIZE","sizeOk","size","typeReg","RegExp","typeOk","test","type","that","reader","FileReader","readAsDataURL","onload","result","deleteImageFile","render","showImage","width","height","uploadImage","require","document","getElementById","style","display"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,KAAd,QAA2B,mBAA3B;AACA,OAAO,kCAAP;AACA,OAAO,kBAAP;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAGA,MAAMC,OAAN,SAAsBN,SAAtB,CAA+B;AAC3BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;AACD;AACC;AACD;;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE,IADG;AAEZC,MAAAA,MAAM,EAAE,EAFI;AAGZC,MAAAA,IAAI,EAAE;AAHM,KAAb;AAKE,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKE,MAAL,GAAc,KAAKA,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAAd;AACJ;;AAEDE,EAAAA,MAAM,GAAE;AACJ,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACCD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA0B,KAAKV,KAAL,CAAWC,OAArC;AACA,UAAMU,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAKAnB,IAAAA,KAAK,CAACoB,IAAN,CAAW,QAAX,EAAoBL,QAApB,EAA6BG,MAA7B,EACGG,IADH,CACQ,UAAUC,QAAV,EAAqB;AACzBC,MAAAA,MAAM,CAACC,KAAP,CAAaF,QAAQ,CAACG,IAAtB;AACA,UAAGH,QAAQ,CAACG,IAAT,KAAgB,SAAnB,EACAF,MAAM,CAACG,QAAP,CAAgBC,MAAhB;AACD,KALH,EAMGC,KANH,CAMS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KARH;AASD;;AAEDG,EAAAA,YAAY,CAACC,CAAD,EAAI;AACf,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;;AACA,QAAI,KAAKC,kBAAL,CAAwBH,IAAxB,CAAJ,EAAmC;AACnC,WAAKI,QAAL,CAAc;AAAE9B,QAAAA,OAAO,EAAE0B;AAAX,OAAd,EAAgC,MAAM;AAClC,aAAKK,aAAL;AACD,OAFH;AAGC;AACF;;AAEDF,EAAAA,kBAAkB,CAACH,IAAD,EAAO;AACvB,UAAMM,cAAc,GAAG,OAAO,IAA9B;;AACA,QAAIN,IAAJ,EAAU;AACR,YAAMO,MAAM,GAAGP,IAAI,CAACQ,IAAL,GAAYF,cAA3B;AACA,YAAMG,OAAO,GAAG,IAAIC,MAAJ,CAAW,uBAAX,EAAoC,GAApC,CAAhB;AACA,YAAMC,MAAM,GAAGF,OAAO,CAACG,IAAR,CAAaZ,IAAI,CAACa,IAAlB,CAAf;;AAEA,UAAI,CAACF,MAAL,EAAa;AACZtB,QAAAA,MAAM,CAACC,KAAP,CAAa,wBAAb;AACA,OAFD,MAEO,IAAI,CAACiB,MAAL,EAAa;AAClBlB,QAAAA,MAAM,CAACC,KAAP,CAAa,wBAAb;AACD;;AAED,aAAOiB,MAAM,IAAII,MAAjB;AACD;AACF;;AAEDN,EAAAA,aAAa,GAAG;AACd,UAAMS,IAAI,GAAG,IAAb;AACA,UAAMd,IAAI,GAAG,KAAK3B,KAAL,CAAWC,OAAxB;AACA,UAAMyC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBjB,IAArB;;AACAe,IAAAA,MAAM,CAACG,MAAP,GAAgB,UAAUnB,CAAV,EAAa;AAC3Be,MAAAA,IAAI,CAACV,QAAL,CAAc;AAAC7B,QAAAA,MAAM,EAAE,KAAK4C;AAAd,OAAd;AACD,KAFD;AAGD;;AAEDC,EAAAA,eAAe,GAAG;AAChB,SAAKhB,QAAL,CAAc;AAAE7B,MAAAA,MAAM,EAAE;AAAV,KAAd;AACD;;AAEH8C,EAAAA,MAAM,GAAE;AACJ,UAAMC,SAAS,GACX,0CACJ;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,OAAR;AAAgBC,QAAAA,MAAM,EAAE;AAAxB,OAAZ;AAA8C,MAAA,GAAG,EAAE,KAAKnD,KAAL,CAAWE,MAA9D;AAAsE,MAAA,SAAS,EAAC,aAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,EAEJ;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKK,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAA/B;AAAuD,MAAA,KAAK,EAAC,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFI,CADJ;AAOA,UAAM+C,WAAW,GAEZ;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,CAFL;AAQA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuB,oBAAC,KAAD;AAAS,MAAA,OAAO,MAAhB;AAAiB,MAAA,GAAG,EAAEC,OAAO,CAAC,gBAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB,CAFA,EAIA;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,QAAX;AAAqB,MAAA,OAAO,MAA5B;AAA6B,MAAA,GAAG,EAAEA,OAAO,CAAC,gBAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFJ,EAGI;AAAM,MAAA,KAAK,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CAJA,EAUA;AAAK,MAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,GAAG,EAAEA,OAAO,CAAC,gBAAD,CAA5B;AAAgD,MAAA,GAAG,EAAC,QAApD;AAA6D,MAAA,KAAK,EAAC,OAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAFJ,EAGI;AAAM,MAAA,KAAK,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CAVA,EAgBA;AAAQ,MAAA,KAAK,EAAC,aAAd;AAA4B,MAAA,OAAO,EAAE,KAAKjD,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBA,EAkBA;AAAK,MAAA,KAAK,EAAC,YAAX;AAAwB,MAAA,EAAE,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,MAAM,EAAC,kBAAb;AAAgC,MAAA,KAAK,EAAC,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,EAGA;AAAO,MAAA,GAAG,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjB,CAHA,EAIA;AACJ,MAAA,IAAI,EAAC,MADD;AAEJ,MAAA,EAAE,EAAC,MAFC;AAGJ,MAAA,MAAM,EAAC,sBAHH;AAIJ,MAAA,SAAS,EAAC,YAJN;AAKJ,MAAA,QAAQ,EAAEsB,CAAC,IAAI;AACb,aAAKD,YAAL,CAAkBC,CAAlB;AACC,OAPC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,EAaJ;AAAO,MAAA,OAAO,EAAC,MAAf;AAAsB,MAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD,KAAK1B,KAAL,CAAWE,MAAX,GAAoB+C,SAApB,GAAgCG,WAD/B,CAbI,EAgBA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,YAA5B;AAAyC,MAAA,OAAO,EAAE,KAAK9C,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBA,CADJ,CAlBA,CADJ;AA4CD;;AACDF,EAAAA,QAAQ,GAAE;AACNkD,IAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,CAAwCC,OAAxC,GAAkD,OAAlD;AACH;;AAEDnD,EAAAA,SAAS,GAAE;AACPgD,IAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,CAAwCC,OAAxC,GAAkD,MAAlD;AACH;;AA/IwB;;AAsJ7B,eAAe5D,OAAf","sourcesContent":["import React,{Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport {Menu, Image } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport '../style/web.css';\nimport { Icon } from 'semantic-ui-react';\n\n\nclass Comment extends Component{\n    constructor(props) {\n        super(props);\n        //this.isLogi = this.isLogin.bind(this);\n       // this.isLogin2 = this.isLogin2.bind(this);\n        //this.logout = this.logout.bind(this);\n       //this.changeContent = this.changeContent.bind(this);\n       this.state = {\n        imgFile: null,\n        imgSrc: \"\",\n        list: []\n      }\n         this.openForm = this.openForm.bind(this);\n         this.closeForm = this.closeForm.bind(this);\n         this.upload = this.upload.bind(this);\n    }\n\n    upload(){\n        const formData = new FormData();\n         formData.append('myImage',this.state.imgFile);\n         const config = {\n             headers: {\n                 'content-type': 'multipart/form-data'\n             }\n         };\n         axios.post('/reply',formData,config)\n           .then(function (response)  {\n             window.alert(response.data);\n             if(response.data===\"Success\")\n             window.location.reload();\n           })\n           .catch(function (error) {\n             console.log(error);\n           });\n       }\n\n       onFileChange(e) {\n        const file = e.target.files[0];\n        if (this.handleBeforeUpload(file)) {\n        this.setState({ imgFile: file}, () => {\n            this.handlePreview();\n          });\n        }\n      }\n\n      handleBeforeUpload(file) {\n        const IMAGE_MAX_SIZE = 1024 * 1024;\n        if (file) {\n          const sizeOk = file.size < IMAGE_MAX_SIZE;\n          const typeReg = new RegExp(/^image\\/jpg|jpeg|png$/, 'i');\n          const typeOk = typeReg.test(file.type);\n    \n          if (!typeOk) {\n           window.alert('Only accept jpg or png');\n          } else if (!sizeOk) {\n            window.alert('Maxsize is 1024 x 1024');\n          }\n    \n          return sizeOk && typeOk;\n        }\n      }\n  \n      handlePreview() {\n        const that = this;\n        const file = this.state.imgFile;\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = function (e) {\n          that.setState({imgSrc: this.result })\n        }\n      }\n  \n      deleteImageFile() {\n        this.setState({ imgSrc: '' });\n      }\n\n    render(){\n        const showImage = (\n            <>\n        <img style={{width: '300px',height: '300px'}} src={this.state.imgSrc} className=\"preview-all\" />\n        <button type=\"submit\" onClick={this.upload.bind(this)} class=\"btn\">Send</button>\n          </>\n        );\n      \n        const uploadImage = (\n            \n             <div className=\"upload-plus-text\">\n             <Icon type=\"plus\" />\n             <div className=\"ant-upload-text\">upload</div>\n           </div>\n            );\n\n        return (\n            <div>\n\n            <div class=\"container\"><Image   rounded src={require('../img/ww.jpeg')}/></div>\n\n            <div class=\"container\">\n                <Image alt=\"Avatar\"  rounded src={require('../img/qq.jpeg')} />\n                <p>Hello.How are you today?</p>\n                <span class=\"time-right\">11:00</span>\n            </div>\n\n            <div class=\"container darker\">\n                <Image  rounded src={require('../img/ww.jpeg')} alt=\"Avater\" class=\"right\"/>\n                <p>Hey! I'm fine. Thanks for asking!</p>\n                <span class=\"time-right\">11:02</span>\n            </div>\n\n            <button class=\"open-button\" onClick={this.openForm}>Reply</button>\n\n            <div class=\"chat-popup\" id=\"myForm\">\n                <form action=\"/action_page.php\" class=\"form-container\">\n                <h1>Reply</h1>\n\n                <label for=\"msg\"><b>Picture</b></label>\n                <input\n            type=\"file\"\n            id='file'\n            accept=\"image/png, image/jpg\"\n            className=\"input-file\"\n            onChange={e => {\n              this.onFileChange(e);\n              }}\n            />\n            <label htmlFor=\"file\" className=\"ant-upload\">  \n          {this.state.imgSrc ? showImage : uploadImage}\n         </label>\n                <button type=\"button\" class=\"btn cancel\" onClick={this.closeForm}>Close</button>\n                </form>\n            </div>\n         \n        </div>\n    \n    \n        )\n      }\n      openForm(){\n          document.getElementById(\"myForm\").style.display = \"block\";\n      }\n\n      closeForm(){\n          document.getElementById(\"myForm\").style.display = \"none\";\n      }\n\n  \n}\n\n\n\n  export default Comment;"]},"metadata":{},"sourceType":"module"}