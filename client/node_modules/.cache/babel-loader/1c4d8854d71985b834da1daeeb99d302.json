{"ast":null,"code":"import _slicedToArray from \"/Users/Jesse/project/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jesse/project/my-app/src/containers/Discussion.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu, Image } from 'semantic-ui-react';\nimport { Modal, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport 'semantic-ui-css/semantic.min.css';\nimport '../style/web.css';\nimport { Icon } from 'semantic-ui-react';\n\nclass Discussion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imgFile: null,\n      imgSrc: \"\",\n      showPreviewModal: false,\n      showCropModal: false\n    };\n  }\n\n  renderUpload() {\n    //上传完成\n    const imgBox = this.state.disabled ? \"img-box-preview-hide\" : \"img-box-preview-show\";\n    return React.createElement(\"div\", {\n      className: imgBox,\n      style: {\n        height: this.props.height\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"img-preview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"eye-o\",\n      className: \"img-operate\",\n      onClick: this.original.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })));\n  }\n\n  imgChange(e) {\n    //获取文件图片\n    this.setState({\n      imgFile: e.target.files[0],\n      renderState: \"loading\"\n    }, () => {\n      this.previewImg();\n    });\n  }\n\n  previewImg() {\n    //本地预览\n    const that = this;\n    const file = this.state.imgFile;\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function (e) {\n      that.setState({\n        imgSrc: this.result\n      });\n    };\n  }\n\n  original() {\n    //原图查看\n    this.setState({\n      isPreview: true\n    });\n  }\n\n  getImgFile() {\n    return {\n      file: this.state.imgFile,\n      src: this.state.imgSrc\n    };\n  }\n\n  cancelModal() {\n    //关闭弹窗\n    this.setState({\n      isPreview: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Home/\",\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Home\"))), React.createElement(Menu.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Honorroll/\",\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Honor roll\")))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      accept: \"image/jpeg, image/gif, image/png, image/bmp\",\n      className: \"input-file\",\n      onChange: e => {\n        this.onFileChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"file\",\n      className: \"ant-upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"upload-plus-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"upload\")))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      visible: this.state.showPreviewModal,\n      title: \"\\u56FE\\u7247\\u9884\\u89C8\",\n      footer: null,\n      width: 700,\n      onCancel: this.handlePreviewCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      style: {\n        width: '100%'\n      },\n      src: this.state.imgSrc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))));\n  }\n\n  showImage() {\n    const _React$useState = React.useState(false),\n          _React$useState2 = _slicedToArray(_React$useState, 2),\n          modalShow = _React$useState2[0],\n          setModalShow = _React$useState2[1];\n\n    if (this.state.imgSrc) {\n      return React.createElement(this.MyModal, {\n        show: modalShow,\n        onHide: () => setModalShow(true),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(this.MyModal, {\n        show: modalShow,\n        onHide: () => setModalShow(false),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      });\n    }\n  }\n\n  MyModal(props) {\n    return React.createElement(Modal, {\n      footer: null,\n      onCancel: this.cancelModal.bind(this),\n      width: \"auto\",\n      wrapClassName: \"img-center\",\n      style: {\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.imgSrc,\n      className: \"preview-all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }));\n  }\n\n  onFileChange(e) {\n    const file = e.target.files[0];\n\n    if (this.handleBeforeUpload(file)) {\n      this.setState({\n        imgFile: file,\n        showCropModal: true\n      }, () => {\n        this.handlePreview();\n      });\n    }\n  } // 检查照片格式、大小等信息\n\n\n  handleBeforeUpload(file) {\n    const IMAGE_MAX_SIZE = 1024 * 1024; // 上传图片最大大小\n\n    if (file) {\n      const sizeOk = file.size < IMAGE_MAX_SIZE;\n      const typeReg = new RegExp(/^image\\/bmp|gif|jpg|jpeg|png$/, 'i');\n      const typeOk = typeReg.test(file.type);\n\n      if (!typeOk) {\n        console.log('照片格式有误');\n      } else if (!sizeOk) {\n        console.log('照片大小超过1M');\n      }\n\n      return sizeOk && typeOk;\n    }\n  }\n\n  handlePreview() {\n    const that = this;\n    const file = this.state.imgFile;\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function (e) {\n      that.setState({\n        imgSrc: this.result\n      });\n    };\n  } // 删除图片\n\n\n  swapImageFile() {\n    this.setState({\n      imgSrc: ''\n    });\n  }\n\n}\n\nexport default Discussion;","map":{"version":3,"sources":["/Users/Jesse/project/my-app/src/containers/Discussion.js"],"names":["React","Component","Link","Menu","Image","Modal","Button","PropTypes","Icon","Discussion","constructor","props","state","imgFile","imgSrc","showPreviewModal","showCropModal","renderUpload","imgBox","disabled","height","original","bind","imgChange","e","setState","target","files","renderState","previewImg","that","file","reader","FileReader","readAsDataURL","onload","result","isPreview","getImgFile","src","cancelModal","render","color","onFileChange","handlePreviewCancel","width","showImage","useState","modalShow","setModalShow","MyModal","display","handleBeforeUpload","handlePreview","IMAGE_MAX_SIZE","sizeOk","size","typeReg","RegExp","typeOk","test","type","console","log","swapImageFile"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport {Menu,Image} from 'semantic-ui-react';\nimport { Modal, Button} from 'react-bootstrap';\nimport PropTypes from 'prop-types'\nimport 'semantic-ui-css/semantic.min.css';\nimport '../style/web.css';\nimport { Icon } from 'semantic-ui-react';\n\nclass Discussion extends Component{\n    constructor(props) {\n            super(props)\n            this.state = {\n              imgFile: null,\n              imgSrc: \"\",\n              showPreviewModal: false,\n              showCropModal:false\n            }\n          }\n        \n        \n        \n       \n          \n        \n        \n          renderUpload() {//上传完成\n            const imgBox = this.state.disabled ? \"img-box-preview-hide\" : \"img-box-preview-show\"\n            return (\n              <div className={imgBox} style={{ height: this.props.height }}>\n                <div className=\"img-preview\">\n                  <Icon type=\"eye-o\" className=\"img-operate\" onClick={this.original.bind(this)} />\n                 \n                </div>\n              </div>\n            )\n          }\n       \n        \n          imgChange(e) {//获取文件图片\n            this.setState({ imgFile: e.target.files[0], renderState: \"loading\" }, () => {\n              this.previewImg()\n            })\n          }\n        \n          previewImg() {//本地预览\n            const that = this;\n            const file = this.state.imgFile;\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = function (e) {\n              that.setState({imgSrc: this.result })\n            }\n          }\n        \n          original() {//原图查看\n            this.setState({ isPreview: true })\n          }\n        \n          getImgFile() {\n            return {file:this.state.imgFile,src:this.state.imgSrc}\n        }\n      \n        cancelModal() {//关闭弹窗\n          this.setState({ isPreview: false })\n        }\n     \n      \n    \n    \n    render(){\n      \n        return (\n            <div>  \n            <Menu>\n            <Menu.Item>\n                <Link to=\"/Home/\" style={{color:'black'}}>\n                    <div>Home</div>\n                </Link>\n            </Menu.Item>\n            <Menu.Item>\n                <Link to=\"/Honorroll/\" style={{color:'black'}}>\n                    <div>Honor roll</div>\n                </Link>\n            </Menu.Item>\n            {/* <Menu.Item>\n                {this.changeContent()}\n            </Menu.Item> */}\n            </Menu>\n            \n\n            \n            <div>\n            <input\n  type=\"file\"\n  id='file'\n  accept=\"image/jpeg, image/gif, image/png, image/bmp\"\n  className=\"input-file\"\n  onChange={e => {\n    this.onFileChange(e);\n  }}\n/>\n<label htmlFor=\"file\" className=\"ant-upload\">  \n<div className=\"upload-plus-text\">\n        <Icon type=\"plus\" />\n        <div className=\"ant-upload-text\">upload</div>\n      </div>\n    </label>\n            </div>\n    \n            <div>\n            <Modal \n  visible={this.state.showPreviewModal}\n  title=\"图片预览\"\n  footer={null}\n  width={700}\n  onCancel={this.handlePreviewCancel}>\n  <img alt=\"\" style={{ width: '100%' }} src={this.state.imgSrc} />\n</Modal>\n      </div>\n\n\n     \n                   \n        </div>\n    \n    \n        )\n      }\n\n      showImage(){\n        const [modalShow, setModalShow] = React.useState(false);\n\n        if (this.state.imgSrc){\n        return (\n            <this.MyModal\n        show={modalShow}\n        onHide={() => setModalShow(true)}\n      />\n        )\n        }\n        else{\n            return (\n                <this.MyModal\n            show={modalShow}\n            onHide={() => setModalShow(false)}\n          />\n            )\n\n        }\n      }\n\n    MyModal(props) {\n        return (\n            <Modal footer={null}\n            onCancel={this.cancelModal.bind(this)}\n            width=\"auto\" wrapClassName=\"img-center\"\n            style={{ display: \"inline-block\" }}\n          >\n            <img src={this.state.imgSrc} className=\"preview-all\" />\n          </Modal>\n        )\n    }\n    \n      onFileChange(e) {\n        const file = e.target.files[0];\n        if (this.handleBeforeUpload(file)) {\n        this.setState({ imgFile: file, showCropModal: true}, () => {\n            this.handlePreview();\n          });\n        }\n      }\n    \n    // 检查照片格式、大小等信息\n      handleBeforeUpload(file) {\n        const IMAGE_MAX_SIZE = 1024 * 1024; // 上传图片最大大小\n        if (file) {\n          const sizeOk = file.size < IMAGE_MAX_SIZE;\n          const typeReg = new RegExp(/^image\\/bmp|gif|jpg|jpeg|png$/, 'i');\n          const typeOk = typeReg.test(file.type);\n    \n          if (!typeOk) {\n           console.log('照片格式有误');\n          } else if (!sizeOk) {\n            console.log('照片大小超过1M');\n          }\n    \n          return sizeOk && typeOk;\n        }\n      }\n\n      handlePreview() {\n        const that = this;\n        const file = this.state.imgFile;\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = function (e) {\n          that.setState({imgSrc: this.result })\n        }\n      }\n      \n      // 删除图片\n      swapImageFile() {\n        this.setState({ imgSrc: '' });\n      }\n      \n}\n\n\n\n  export default Discussion;"]},"metadata":{},"sourceType":"module"}